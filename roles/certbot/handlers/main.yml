- name: Remove Certbot image
  docker_image:
    name: certbot/certbot
    state: absent
  listen: "remove certbot image"
  notify: "pull certbot image"

- name: Pull Certbot image
  docker_image:
    name: certbot/certbot
  listen: "pull certbot image"
  notify:
    - "stop production nginx"
    - "create certbot volumes"
    - "configure certbot nginx"
    - "start certbot nginx"

- name: Create Certbot etc volume
  docker_volume:
    name: certbot-etc
  listen: "create certbot volumes"

- name: Create Certbot var volume
  docker_volume:
    name: certbot-var
  listen: "create certbot volumes"

- name: Configure Certbot Nginx
  synchronize:
    src: '{{ inventory_dir }}/roles/certbot/files/'
    dest: ~/certbot
    existing_only: false
    private_key: ~/.ssh/id_rsa
  listen: "configure certbot nginx"

- name: Start Certbot Nginx
  docker_container:
    name: nginx-certbot
    image: nginx:1.11.6
    network_mode: host
    ports:
      - 80:80
    volumes:
      - /home/ubuntu/certbot/html/:/usr/share/nginx/html
      - /home/ubuntu/certbot/conf.d/:/etc/nginx/conf.d/
      - /home/ubuntu/certbot/nginx.conf:/etc/nginx/nginx.conf
  listen: "start certbot nginx"
  # notify: "certbot staging verification"
  notify: "certbot production verification"

- name: Certbot staging verification
  docker_container:
    name: certbot
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - /home/ubuntu/certbot/html/:/data/letsencrypt
      - /home/ubuntu/certbot/log/:/var/log/letsencrypt
    command: >
      certonly --webroot
      --register-unsafely-without-email
      --agree-tos
      --webroot-path=/data/letsencrypt
      --staging
      -d datapun.net -d www.datapun.net
  listen: "certbot staging verification"
  notify: "stop certbot nginx"

- name: Certbot production verification
  docker_container:
    name: certbot
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - /home/ubuntu/certbot/html/:/data/letsencrypt
      - /home/ubuntu/certbot/log/:/var/log/letsencrypt
    command: >
      certonly --webroot
      --email erik.andrew.perkins@gmail.com
      --agree-tos
      --no-eff-email
      --webroot-path=/data/letsencrypt
      -d datapun.net -d www.datapun.net
  listen: "certbot production verification"
  notify:
    - "create certbot cron job"
    - "generate dh param"
    - "stop certbot nginx"

- name: Generate DH param
  command: openssl dhparam -out /home/ubuntu/nginx/dhparam-2048.pem 2048
  listen: "generate dh param"

- name: Create Certbot cron job
  cron:
    name: certbot-renew
    minute: 0
    hour: 7
    job: >
       docker run --rm -it --name certbot
       -v "certbot-etc:/etc/letsencrypt"
       -v "certbot-var:/var/lib/letsencrypt"
       -v "/home/ubuntu/certbot/html/:/data/letsencrypt"
       -v "/home/ubuntu/certbot/log/:/var/log/letsencrypt"
       certbot/certbot
       renew --webroot -w /data/letsencrypt --quiet
       && docker kill --signal=HUP nginx
    state: present
    user: ubuntu
  listen: "create certbot cron job"
  notify: "stop certbot nginx"

- name: Stop Certbot Nginx
  docker_container:
    name: nginx-certbot
    state: absent
  listen: "stop certbot nginx"
  notify: "configure production nginx"
